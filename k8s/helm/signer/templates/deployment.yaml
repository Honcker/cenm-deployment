{{- $DATE := ( include "currentDateTime" . ) }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "signer.fullname" . }}
  labels:
{{ include "signer.labels" . | indent 4 }}
{{ include "cenm.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "signer.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{ include "cenm.labels" . | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "signer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ include "cenm.labels" . | indent 8 }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: pki
        image: "{{ required "signer[pki]: missing value for .Values.dockerImagePki.name" .Values.dockerImagePki.name }}:{{ required "signer[pki]: missing value for .Values.dockerImagePki.tag" .Values.dockerImagePki.tag }}"
        imagePullPolicy: {{ .Values.dockerImagePki.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |-
          cp CM-FILES/pki.conf etc/pki.conf
          cp CM-FILES/signer.conf etc/signer.conf;
          mkdir DATA/key-stores DATA/trust-stores DATA/crl-files
          time java -Xmx{{ .Values.cordaJarMx }}G -jar {{ .Values.jarPath }}/pkitool.jar --config-file {{ .Values.configPath }}/pki.conf
        volumeMounts:
        - name: pkitool-certs-keys
          mountPath: /opt/corda/DATA
        - name: pkitool-signer-etc
          mountPath: /opt/corda/etc
        - name: pkitool-conf
          mountPath: /opt/corda/CM-FILES/pki.conf
          subPath: pki.conf
        - name: signer-conf
          mountPath: /opt/corda/CM-FILES/signer.conf
          subPath: signer.conf
        resources:
          requests:
            memory: {{ .Values.cordaJarMx }}G
          limits:
            memory: {{ add .Values.cordaJarMx 2 }}G
      containers:
      - name: main
        image: "{{ required "signer[main]: missing value for .Values.dockerImageSigner.name" .Values.dockerImageSigner.name }}:{{ required "signer[main]: missing value for .Values.dockerImageSigner.tag" .Values.dockerImageSigner.tag }}"
        imagePullPolicy: {{ .Values.dockerImageSigner.pullPolicy }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "touch DATA/PKITOOL-DONE"]
        command: ["/bin/bash", "-c"]
        args:
        - |-
          java -Xmx{{ .Values.cordaJarMx }}G -jar {{ .Values.jarPath }}/signer.jar --config-file {{ .Values.configPath }}/signer.conf
        volumeMounts:
        - name: pkitool-certs-keys
          mountPath: /opt/corda/DATA
        - name: pkitool-signer-etc
          mountPath: /opt/corda/etc
        - name: signer-logs
          mountPath: /opt/corda/logs
        resources:
          requests:
            memory: {{ .Values.cordaJarMx }}G
          limits:
            memory: {{ add .Values.cordaJarMx 2 }}G
      - name: logs
        image: "{{ required "signer[logs]: missing value for .Values.dockerImageSigner.name" .Values.dockerImageSigner.name }}:{{ required "signer[logs]: missing value for .Values.dockerImageSigner.tag" .Values.dockerImageSigner.tag }}"
        imagePullPolicy: {{ .Values.dockerImageSigner.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |-
          cd /opt/corda/
          while true; do tail -f logs/signing-service/*.log 2>/dev/null ; sleep 5; done
          # in case sth went wrong just wait indefinitely ...
          tail -f /dev/null
        volumeMounts:
        - name: signer-logs
          mountPath: /opt/corda/logs
      imagePullSecrets:
      - name: cenm-registry
      volumes:
        - name: pkitool-conf
          configMap:
            name: pkitool-conf-{{ $DATE }}
        - name: signer-conf
          configMap:
            name: cenm-conf-{{ $DATE }}
        - name: pkitool-signer-etc
          persistentVolumeClaim:
            claimName: pkitool-signer-etc-{{ $DATE }}
        - name: signer-logs
          persistentVolumeClaim:
            claimName: signer-logs-{{ $DATE }}
        - name: pkitool-certs-keys
          persistentVolumeClaim:
            claimName: pkitool-certs-keys
