{{- $DATE := ( include "currentDateTime" . ) }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "idman.fullname" . }}
  labels:
{{ include "idman.labels" . | indent 4 }}
{{ include "cenm.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "idman.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{ include "cenm.labels" . | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "idman.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ include "cenm.labels" . | indent 8 }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: config
        image: "{{ required "idman[config]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "idman[config]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
        imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |-
          cp CM/run.sh bin/
          cp CM/idman.conf etc/
          chmod +x bin/*
        volumeMounts:
        - name: idman-etc
          mountPath: /opt/corda/etc
        - name: idman-conf
          mountPath: /opt/corda/CM/run.sh
          subPath: run.sh
        - name: idman-conf
          mountPath: /opt/corda/CM/idman.conf
          subPath: idman.conf
        resources:
          requests:
            memory: {{ .Values.cordaJarMx }}G
          limits:
            memory: {{ add .Values.cordaJarMx 2 }}G
      - name: waitforpki
        image: "{{ required "idman[waitforpki]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "idman[waitforpki]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
        imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |-
          echo "Waiting for ./DATA/PKITOOL-DONE ..."
          until [ -f ./DATA/PKITOOL-DONE ]
          do
            sleep 5
          done
          ls -al ./DATA/PKITOOL-DONE
          echo "Waiting for ./DATA/PKITOOL-DONE ... done."
        volumeMounts:
        - name: pkitool-certs-keys
          mountPath: /opt/corda/DATA
        resources:
          requests:
            memory: {{ .Values.cordaJarMx }}G
          limits:
            memory: {{ add .Values.cordaJarMx 2 }}G
      containers:
      - name: main
        image: "{{ required "idman[main]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "idman[main]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
        imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |-
          cp CM/run.sh bin/
          chmod +x bin/*
          bin/run.sh
        volumeMounts:
        - name: idman-etc
          mountPath: /opt/corda/etc
        - name: idman-conf
          mountPath: /opt/corda/CM/run.sh
          subPath: run.sh
        - name: idman-conf
          mountPath: /opt/corda/CM/idman.conf
          subPath: idman.conf
        - name: idman-logs
          mountPath: /opt/corda/logs
        - name: idman-h2
          mountPath: /opt/corda/h2
        - name: pkitool-certs-keys
          mountPath: /opt/corda/DATA
        resources:
          requests:
            memory: {{ .Values.cordaJarMx }}G
          limits:
            memory: {{ add .Values.cordaJarMx 2 }}G
      - name: logs
        image: "{{ required "idman[logs]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "idman[logs]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
        imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |-
          cd /opt/corda
          while true; do tail -f logs/identity-manager/*.log 2>/dev/null; sleep 5; done
          # in case sth went wrong just wait indefinitely ...
          tail -f /dev/null
        volumeMounts:
        - name: idman-logs
          mountPath: /opt/corda/logs
      imagePullSecrets:
      - name: cenm-registry
      volumes:
        - name: idman-conf
          configMap:
            name: idman-conf-{{ $DATE }}
        - name: idman-etc
          persistentVolumeClaim:
            claimName: idman-etc-{{ $DATE }}
        - name: idman-h2
          persistentVolumeClaim:
            claimName: idman-h2-{{ $DATE }}
        - name: idman-logs
          persistentVolumeClaim:
            claimName: idman-logs-{{ $DATE }}
        - name: pkitool-certs-keys
          persistentVolumeClaim:
            claimName: pkitool-certs-keys
